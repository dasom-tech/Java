[이클립스 실행]


// # Eclipse 단축키
// Ctrl + S     : 저장하기(저장하지 않은 파일은 *가 있음)
// Ctrl + F11   : 소스 컴파일 및 실행
// Ctrl + [+,-] : 글자 크기 조절
// Ctrl + M         : 현재 창을 최대화/최소화
// Ctrl + Shift + f : 자동으로 줄 및 띄어쓰기 정렬
// Ctrl + i : 블록 지정된 부분의 들여쓰기 맞춤

// # 실수로 닫은 창 찾기
//  Window -> Show View -> 원하는 것 선택

// # 블록지정 관련 단축키
//  Ctrl + A    : 전체 블록 지정
//  Shift + 방향키: 방향키를 이용해 블록지정
//  Shift + HOME: 커서 위치부터 줄의 맨 앞까지 블록지정
//  Shift + END : 커서 위치부터 줄의 맨 뒤까지 블록지정
//  HOME : 커서를 줄의 맨 앞으로 이동
//  END  : 커서를 줄의 맨 뒤로 이동

//  Ctrl + X    : 잘라내기
//  Ctrl + C    : 복사하기
//  Ctrl + V    : 붙여넣기
//  Alt  + 방향키  : 소스 줄 바꾸기

//  Ctrl + Z    : 되돌리기
//  Ctrl + Y    : 되돌리기 취소하기

// # 주석(Comment)
//  - 프로그래머가 하고 싶은 말을 메모해두는 것
//  - 보통은 소스에 대한 설명이나 사용법 등을 적는 용도로 사용한다
//  - 프로그램 실행에 영향을 미치지 않는다

// 한 줄 주석
/* 여러 줄 주석 */

/** 
   Hello 클래스는 인사를 잘 하는  클래스입니다. (문서화)
       사용하실 때는 어떤 메서드를 쓰시면 됩니다.
 */

// public class의 이름은 반드시 파일명과 같아야 한다
public class A00_Hello {
// 빨간 줄이 생겼을 때 그곳에 커서를 두고 F2를 누르면
// 에러에 대한 정보와 해결책을 볼 수 있다
	
	// # 함수란?
	//  - 어떤 단어 뒤에 ()가 붙어 있는 것을 모두 함수라고 한다
	//  - 클래스 내부에 있는 함수는 메서드라고 부른다
	
	// # main() 함수
	//  - 프로그램의 시작 지점
	//  - 프로그램을 시작하면 가장 먼저 main() 함수를 찾아 실행시킨다
	//  - main() 함수가 끝나면 프로그램도 끝난다
	//  - main() 함수의 범위는 중괄호로 결정된다
	public static void main(String[] args) {
		// 프로그램의 시작 지점
		
		
		// # System.out.println() 함수
		//  - ()안에 전달한 내용을 콘솔에 출력하는 함수
		
		// # 자바의 데이터들
		
		// 1. ""사이에 적는 것 : 문자열(String)
		System.out.println("hello, world!"); // ctrl+F11
		System.out.println("안녕하세요~");
		
		// 2. 그냥 숫자 : 정수(Integer)
		System.out.println(123); 
		
		// 3. 소수 : 실수 (Double, Float)
		System.out.println(123.123); 
		
		// 4. ''사이에 적는 것 : 문자 (Character)
		// ※ 작은 따옴표에 문자를 여러개 넣으면 에러
		System.out.println('問');
		System.out.println('A');
		System.out.println('※');
				
		// ; (세미콜론) : 한 명령어의 끝을 알린다.
		
		
		// 프로그램 끝
	}

}


















public class A01_Escape {
	// # Escape 문자
	//  - 특수한 기능을 가진 문자
	//  - \(역슬래시)가 바로 뒤의 문자와 합쳐져 특수한 기능을 한다
	//  - 두 문자를 합쳐서 하나의 문자로 인식한다
	
	// main() 함수에 오타가 있으면 가장 최근에 실행했던 main()을 실행한다
	public static void main(String[] args) {

		// \n : 줄바꿈의 기능을 가진 특수 문자		
		System.out.println("안\n녕\n하세요, 반갑습니다.");
		
		// \t : Tab키의 기능을 가진 특수 문자
		System.out.println("안\t녕\t하세요, 반갑습니다.\n");
		
		//※ Tab키는 텍스트의 줄을 간단히 맞출 때 유용하다
		System.out.println("이름\t가격\t평점");
		System.out.println("국대\t8,000\t4.5");
		System.out.println("엽떡\t9,000\t4.3");
		
		// \\ : 그냥 역슬래시를 출력하고 싶을 때 사용한다
		//  ex> C:\Users\Admin\MyGames\를 출력하고 싶은 경우
		System.out.println("C:\\Users\\Admin\\MyGames\\");
		
		// \" : 그냥 큰 따옴표를 출력하고 싶은 경우에 사용한다
		// \' : 그냥 작은 따옴표를 출력하고 싶은 경우에 사용한다
		System.out.println("철수는 \"피자\"를 먹고 싶다");
		System.out.println("철수는 \'피자\'를 먹고 싶다");
		System.out.println("철수는'피자'를 먹고 싶다");
		System.out.println('\'');
	}
	
}













package quiz;

public class A01_EscapeQuiz {
	public static void main(String[] args) {
		System.out.println("===================");
		System.out.println("     /)/)");
		System.out.println("    (  ..)");
		System.out.println("    (  >♡");
		System.out.println("Have a Good Time.");
		System.out.println("===================");
		
		System.out.println("        #### 회비 정보 ####");
		System.out.println("========================================");
		System.out.println("이름\t나이\t전화번호\t\t회비");
		System.out.println("========================================");
		System.out.println("홍길동\t\"15\"\t010-123-1234\t$20,000");
		System.out.println("임꺽정\t\"20\"\t010-234-2345\t$30,000");
		System.out.println("김말이\t\"28\"\t010-345-6789\t$50,000");
		System.out.println("----------------------------------------");
		System.out.println("총합계\t\t\t\t$100,000");
		}
}











public class A03_varNaming {
	
	public static void main(String[] args) {
		
		// # 변수를 사용해야 하는 이유
		//  1. 값을 한번에 변경 할 수 있다 (2번 이상 사용될 값은 변수를 사용하는 것이 좋다)
		//  2. 값에 의미를 부여 할 수 있다 (변수의 이름을 잘 짓는 것이 매우 중요하다)
		
		int price = 8000;
		
		System.out.println("가격은" + price + "원입니다");
		System.out.println("가격은" + 8000 + "원입니다");
		
		
		int apple_num = 13;     //사과의 개수
		int apple_price = 478; //사과 한 개의 가격
		int apple_cal = 52;    //사과 한 개의 칼로리
		
		System.out.println("사과의 개수" + apple_num);
		System.out.println("총 가격 : " + apple_price * apple_num + "원");
		System.out.println("총 칼로리 : " + apple_cal * apple_num + "kcal");
		
		/*
		    # 권장되는 변수 작명 규칙(개발자들의 문화)
		    
		    (1) snake_case (뱀 표기법)
		        - 두 단어 이상을 이어붙인 변수명을 사용할 때 _를 활용한다
		        - apple_cal, minsu_eng_score, user_password
		        - C/C++스타일
		        
		    (2) CamelCase (낙타 표기법)
		        - 두 단어 이상을 이어붙인 변수명을 사용할 때 대문자를 활용한다
		        - appleNum, appleCal, userName, userProfile
		        - JAVA 스타일
		  
		    (3) 변수의 첫 글자는 소문자를 사용한다 (클래스의 첫 글자는 대문자를 사용한다)
		    
		    (4) 값이 변하지 않을 변수(상수)의 이름은 모두 대분자를 사용한다
		        - MAX_SCORE = 100, PI
		        
		    (5) 변수의 값이 어떤 값인지 추측할 수 있는 단어를 사용하는 것이 좋다
		  
		    # 필수적인 변수의 작명 규칙 (안 지키면 컴파일 에러 발생)
		    
		    (1) 변수명 첫 글자는 숫자가 될 수 없다
		        ex> 1st, 2nd, 4pple
		        
		    (2) 변수 사이에는 공백을 사용할 수 없다
		    
		    (3) 특수문자는 _와 $만 사용할 수 있다
		        ex> @pple, b@nana, #id
		        
		    (4) 이미 자바에서 문법적으로 사용하고 있는 단어들(예약어)은 변수명으로 사용할 수 없다
		        ex> public, static, void, int		       
		*/		 
	}

}

























